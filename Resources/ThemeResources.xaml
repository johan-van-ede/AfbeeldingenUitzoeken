<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:AfbeeldingenUitzoeken.Converters">    <!-- Value Converters -->
    <converters:BrightnessConverter x:Key="BrightnessConverter" BrightnessFactor="1.2"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
    <converters:MediaTypeIconConverter x:Key="MediaTypeIconConverter"/>
    <converters:LoadingOpacityConverter x:Key="LoadingOpacityConverter"/>
      <!-- Theme Colors -->
    <SolidColorBrush x:Key="ThemeBackground" Color="#1E1E1E"/> <!-- Very Dark Gray - Main background color -->
    <SolidColorBrush x:Key="ThemeSecondary" Color="#2D2D2D"/> <!-- Dark Gray - Secondary background for controls and panels -->
    <SolidColorBrush x:Key="ThemeBorder" Color="#3E3E3E"/> <!-- Medium Gray - Border color for UI elements -->
    <SolidColorBrush x:Key="ThemeText" Color="#E0E0E0"/> <!-- Light Gray - Primary text color -->
    <SolidColorBrush x:Key="ThemeSuccess" Color="#5CB85C"/> <!-- Green - Success actions and positive indicators -->
    <SolidColorBrush x:Key="ThemeDanger" Color="#D9534F"/> <!-- Red - Warning, danger actions, and negative indicators -->
    <SolidColorBrush x:Key="ThemeInfo" Color="#5BC0DE"/> <!-- Light Blue - Information and highlighting -->
    <SolidColorBrush x:Key="ThemeHighlight" Color="#404040"/> <!-- Medium-Dark Gray - Highlight for UI elements -->
    <SolidColorBrush x:Key="ThemeHover" Color="#353535"/> <!-- Dark Gray - Hover effect for controls -->
    <SolidColorBrush x:Key="ThemeSelected" Color="#404040"/> <!-- Medium-Dark Gray - Selected item background -->    <SolidColorBrush x:Key="ThemeOverlay" Color="#000000" Opacity="0.5"/> <!-- Semi-transparent black - For overlays -->
    <SolidColorBrush x:Key="ThemeBlack" Color="#000000"/> <!-- Black - For media backgrounds and other elements needing pure black -->
    
    <!-- Base Button Style -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ThemeBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeText}"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            CornerRadius="5"
                            BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="1" Opacity="0.7"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" Value="0.9"/>
                            <Setter TargetName="border" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BrightnessConverter}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon Button Style -->
    <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="8,5,8,5"/>
        <Setter Property="FontSize" Value="22"/>
    </Style>

    <!-- Navigation Button Style -->
    <Style x:Key="NavigationButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Opacity" Value="0.9"/>
        <Setter Property="Background" Value="{StaticResource ThemeBorder}"/>
    </Style>

    <!-- TextBox Style -->
    <Style x:Key="ThemeTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource ThemeSecondary}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeText}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- ComboBox Item Style -->
    <Style x:Key="ThemeComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeText}"/>
        <Setter Property="Padding" Value="8,5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ThemeInfo}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ThemeHighlight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Style -->
    <Style x:Key="ThemeComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource ThemeSecondary}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeText}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,5"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ToggleButton x:Name="ToggleButton" 
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Foreground="{TemplateBinding Foreground}"
                                        Padding="{TemplateBinding Padding}"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Background="Transparent"
                                                            BorderThickness="0"
                                                            Padding="{TemplateBinding Padding}">
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="0" 
                                                    Margin="4,0,0,0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    Content="{TemplateBinding SelectionBoxItem}"
                                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                    IsHitTestVisible="False" />
                                    <Path x:Name="Arrow" 
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Data="M 0 0 L 4 4 L 8 0 Z"
                                        Fill="{StaticResource ThemeText}" />
                                </Grid>
                            </ToggleButton>
                        </Border>
                        <Popup x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">                                <Border x:Name="DropDownBorder" 
                                        Background="{StaticResource ThemeSecondary}"
                                        BorderBrush="{StaticResource ThemeBorder}"
                                        BorderThickness="1"
                                        CornerRadius="4"
                                        Margin="0,1,0,0">
                                    <ScrollViewer x:Name="DropDownScrollViewer" 
                                                SnapsToDevicePixels="True"
                                                MaxHeight="200">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>                    <ControlTemplate.Triggers>                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThemeInfo}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ThemeInfo}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThemeInfo}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ThemeInfo}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource ThemeText}"/>
                    <Setter Property="Padding" Value="10,6"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border x:Name="Border" 
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource ThemeInfo}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource ThemeSelected}"/>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource ThemeHighlight}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox Item Style -->
    <Style x:Key="ThemeListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" 
                          Background="{TemplateBinding Background}"
                          BorderThickness="0"
                          Margin="2">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThemeInfo}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
